# Step 1 and 2: Create Menu and give it a constructor
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items
    self.start_time = start_time
    self.end_time = end_time

# Step 7: Class string representation
  def __repr__(self):
    return self.name + " Menu available from " + str(self.start_time) + " - " + str(self.end_time)

# steps 12 and 13: create a new class for Franchise
class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return self.address

# Step 9: Calculate Bill
  def calculate_bill(self, purchases):
      bill = 0
      for purchase in purchases:
        if purchase in self.items:
          bill += self.items[purchase]
      return bill

  def available_menus(self, time):
    available_menus = []
    for menu in self.menus:
      if time >= menu.start_time and time <= menu.end_time:
        available_menus.append(menus)
      return available_menus


    

# Step 3: Brunch Menu
brunch_items = {
  'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50
}

brunch_menu = Menu("Brunch", brunch_items, 1100, 1600)

# Step 4: Early Bird Menu
early_bird_items = {
  'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00,
}

early_bird_menu = Menu("Early Bird", early_bird_items, 1500, 1800)

# Step 5: Dinner Menu
dinner_items = {
  'crostini with eggplant caponata': 13.00, 'caesar salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00,
}

dinner_menu = Menu("dinner", dinner_items, 1700, 2300)

# Step 6: Kids Menu
kids_items = {
  'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00
}

kids_menu = Menu("Kids", kids_items, 1100, 2100)

# Step 8: print to test
# print(brunch_menu)
# Step 10: print to test
# print(brunch_menu.calculate_bill(["pancakes", "home fries", "coffee"]))

# step 11:print to test
# print(early_bird_menu.calculate_bill(["salumeria plate", "mushroom ravioli (vegan)"]))

menus = [brunch_menu, early_bird_menu, dinner_menu, kids_menu]

# Step 14: Create first two franchises
flagship_store = Franchise("1232 West End Road", menus)
new_installment = Franchise("12 East Mulberry Street", menus)

# Step 15
# print(flagship_store)

print(flagship_store.available_menus(1200))
